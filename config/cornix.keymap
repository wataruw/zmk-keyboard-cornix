/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "zmk-helpers/helper.h"
#include "includes/cornix54.h"
#include "includes/keycode_japanese.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/ext_power.h>
#include <behaviors/naginata.dtsi>

// tap windows for ctl alt and gui

#define HM_TAPPING_TERM 250
#define HM_TAPPING_REPEAT 210

// quick tapping for shift

#define HM_TAPPING_TERM_FAST 200
#define HM_PRIOR_IDLE 70
#define BASE 0
#define LOWER 1
#define RAISE 2
#define NAGINATA 3

// https://github.com/urob/zmk-config/tree/main#timeless-homerow-mods

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5  // right hand
#define THUMBS LH1 LH0 RH0 RH1
#define KEYS_T LH1 LH0 RH0 RH1
#define ZMK_POINTING_DEFAULT_SCRL_VAL 15

/ {
    // Activate ADJUST layer by pressing raise and lower

    macros {
        ng_on: ng_on {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LANGUAGE_1 &kp INTERNATIONAL_4 &to 3>
                ;
        };
        ng_off: ng_off {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LANGUAGE_2 &kp INTERNATIONAL_5 &to 0>
                ;
        };
    };

    behaviors {
        hm_l: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <200>;                // repeat on tap-into-hold
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_R KEYS_T>;
            hold-trigger-on-release;
        };

        hm_r: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_L KEYS_T>;
            hold-trigger-on-release;
        };

        // Positional Homerow mods for shift
        // Use faster tapping term and disable some features that may
        // cause false negatives.

        hm_shift_l: hm_shift_l {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            //flavor = "balanced";

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_R KEYS_T>;
            hold-trigger-on-release;
        };

        hm_shift_r: hm_shift_r {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_L KEYS_T>;

            // for quick tapping; shift+~

            hold-trigger-on-release;
        };

        /*
         * Non-Positional Homerow Mods
         * Used for &mm_grescm_gui behavior on left hand.
         *
         * Usage: &hm LSHFT T
         * Tap: T
         * Tap-Tap-Hold: Repeat T
         * Hold: LSHIFT
         */

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <200>;
        };

        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&mo>, <&kp>;

            flavor = "hold-preferred";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <200>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_ng_on {
            timeout-ms = <300>;
            key-positions = <18 19>; // H, J
            bindings = <&ng_on>;
            layers = <0>;
        };
        combo_ng_off {
            timeout-ms = <300>;
            key-positions = <16 17>; // F, G
            bindings = <&ng_off>;
            layers = <0 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Base";

            // -----------------------------------------------------  -------------------------------------------------------
            // | TAB   |  Q     |  W  |  E   |  R   |  T   |                   |  Y    |  U    |  I    |  O   |   P   |  ESC |
            // | CTRL  |  A     |  S  |  D   |  F   |  G   |                   |  H    |  J    |  K    |  L   |   -   |  @   |
            // | SHIFT |  Z     |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N    |  M    |  ,    |  .   |   ↑   |  /   |
            // | MO(1) |  MO(2) | GUI |      | ALT  |  F2  |  SPACE |  | ENTER |  BSPC |  DEL  |       |  ←   |   ↓   |  →   |

            bindings = <
&kp TAB    &kp Q   &kp W     &kp E  &kp R     &kp T                          &kp Y      &kp U    &kp I         &kp O       &kp P         &kp ESC
&ng LCTRL  &kp A   &kp S     &kp D  &kp F     &kp G                          &kp H      &kp J    &kp K         &kp L       &kp JP_MINUS  &kp JP_AT
&kp LSHFT  &kp Z   &kp X     &kp C  &kp V     &kp B   &kp C_MUTE  &none      &kp N      &kp M    &kp JP_COMMA  &kp JP_DOT  &kp UP        &kp JP_SLASH
&mo 1      &mo 2   &ng LGUI         &kp LALT  &kp F2  &kp SPACE   &kp ENTER  &kp BSPC   &kp DEL                &kp LEFT    &kp DOWN      &kp RIGHT
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        Lower_layer {
            display-name = "Lower";

            // -----------------------------------------------------  ----------------------------------------------------------
            // | =     |  /     |  *  |  7   |  8   |  9   |                   |  '    |  (    |  )    |  [    |   ]     |  ^   |
            // | CTRL  |  ,     |  .  |  4   |  5   |  6   |                   |  $    |  %    |  &    |  :    |   ~     |  `   |
            // | SHIFT |  +     |  -  |  1   |  2   |  3   |  MUTE  |  |       |  !    |  "    |  #    |  ;    |   PG_UP |  _   |
            // | MO(1) |  MO(2) | GUI |      | ALT  |  0   |  SPACE |  | ENTER |  BSPC |  DEL  |       |  HOME*|   PG_DN |  END*|

            bindings = <
&kp JP_EQUAL  &kp KP_SLASH  &kp KP_ASTERISK  &kp KP_N7  &kp KP_N8  &kp KP_N9                         &kp JP_SQT   &kp JP_LPAR   &kp JP_RPAR   &kp JP_LBKT   &kp JP_RBKT   &kp JP_CARET
&ng LCTRL     &kp COMMA     &kp KP_DOT       &kp KP_N4  &kp KP_N5  &kp KP_N6                         &kp JP_DLLR  &kp JP_PRCNT  &kp JP_AMPS   &kp JP_COLON  &kp JP_TILDE  &kp JP_GRAVE
&kp LSHFT     &kp KP_PLUS   &kp KP_MINUS     &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp C_MUTE  &none      &kp JP_EXCL  &kp JP_DQT    &kp JP_HASH   &kp JP_SEMI   &kp PG_UP     &kp JP_UNDER
&mo 1         &mo 2         &ng LGUI                 &kp LALT   &kp KP_N0  &kp SPACE   &kp ENTER  &kp BSPC     &kp DEL                     &ng HOME      &kp PG_DN     &ng END
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        Raise_layer {
            display-name = "Raise";

            // -------------------------------------------------------------------------  --------------------------------------------------------------------
            // | Unlock  |  BT0      |  BT1         |  BT2  |  BT3   |  BT4   |                       |  F7   |  F8   |  F9   |  F10     |         |  |         |
            // | CTRL    |  F15      |  F16         |       |  LANG2 |  LANG1 |                       |  F4   |  F5   |  F6   |  F11     |         |  ¥         |
            // | SHIFT   |  Clear BT |  Clear Peer  |       |        |        |  MUTE    |  |         |  F1   |  F2   |  F3   |  F12     |   MS_UP |  BackSlash |
            // | MO(1)   |  MO(2)    |  GUI         |       |  ALT   |        |  Mouse 1 |  | Mouse 2 |       |       |       |  MS_LEFT |   MS_DN |  MS_RIGHT  |

            bindings = <
&studio_unlock  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                        &kp F7  &kp F8  &kp F9  &kp F10         &none           &kp JP_PIPE
&ng LCTRL       &ng F15       &ng F16         &none         &kp LANG2     &kp LANG1                           &kp F4  &kp F5  &kp F6  &kp F11         &none           &kp JP_YEN
&kp LSHFT       &bt BT_CLR    &bt BT_CLR_ALL  &none         &none         &none         &kp C_MUTE  &none     &kp F1  &kp F2  &kp F3  &kp F12         &mmv MOVE_UP    &kp JP_BSLH
&mo 1           &mo 2         &ng LGUI                      &kp LALT      &none         &mkp MB1    &mkp MB2  &none   &none           &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        naginata_layer {
            display-name = "Naginata";

            // Naginata input layer - 31 keys using &ng behavior
            // Same layout as default layer but with &ng bindings
            // Note: Arrow keys are set to &trans so that holding MO(1) (Lower)
            // will surface HOME/END/PG_UP/PG_DN from Layer 1.

            bindings = <
&trans     &ng Q  &ng W     &ng E  &ng R     &ng T                             &ng Y     &ng U    &ng I      &ng O     &ng P     &trans
&ng LCTRL  &ng A  &ng S     &ng D  &ng F     &ng G                             &ng H     &ng J    &ng K      &ng L     &ng MINUS &trans
&kp LSHFT  &ng Z  &ng X     &ng C  &ng V     &ng B      &kp C_MUTE  &none      &ng N     &ng M    &ng COMMA  &ng DOT   &trans    &ng FSLH
&mo 1      &mo 2  &ng LGUI         &kp LALT  &trans     &ng SPACE   &ng ENTER  &kp BSPC  &kp DEL             &trans    &trans    &trans
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        // Extra layers reserved for ZMK Studio use
        extra1 {
            status = "reserved";
        };
        extra2 {
            status = "reserved";
        };
    };
};
